@using ProductApp.Constatnts;
@model IEnumerable<ProductApp.Models.Product>

@{
    ViewData["Title"] = "Index";
}


@{
    ViewData["Title"] = "Index";
    var categories = Enum.GetValues(typeof(ProductCategory))
                         .Cast<ProductCategory>()
                         .Select(c => new SelectListItem
                         {
                             Value = c.ToString(),
                             Text = c.ToString()
                         });
}



@*<p>
    <a class="btn btn-primary" asp-action="AddProduct">Create New</a>
</p>*@

<h1 class="text-center">Index</h1>

<form asp-action="Index" method="get" class="text-center">
    <div class="form-group">
        <label for="categoryFilter">Filter by Category:</label>
        <select class="form-control" id="categoryFilter" name="categoryFilter">
            <option value="">All</option>
            @foreach (var category in categories)
            {
                <option value="@category.Value">@category.Text</option>
            }
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Filter</button>
</form>

<h1 class="text-center">ADD PRODUCTS</h1>

<p class="text-center">
    <a class="btn btn-primary" asp-action="AddProduct">Create New</a>
</p>

@if (ViewBag.Message != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.Message
    </div>
}


<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Make)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.category)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Make)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.category)
                    </td>
                    <td>
                        <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
